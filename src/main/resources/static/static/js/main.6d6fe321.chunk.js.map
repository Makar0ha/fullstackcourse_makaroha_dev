{"version":3,"sources":["client.js","App.js","reportWebVitals.js","index.js"],"names":["checkStatus","response","ok","error","Error","statusText","Promise","reject","getAllStudents","fetch","then","Header","Layout","Content","Footer","Sider","items","getItem","react_default","a","createElement","PieChartOutlined","DesktopOutlined","UserOutlined","TeamOutlined","FileOutlined","columns","title","dataIndex","key","label","icon","children","App","_useState","useState","_useState2","Object","slicedToArray","collapsed","setCollapsed","_useState3","_useState4","students","setStudents","_useState5","_useState6","fetching","setFetching","useEffect","console","log","res","json","data","layout","style","minHeight","collapsible","onCollapse","value","className","menu","theme","defaultSelectedKeys","mode","padding","margin","breadcrumb","Item","spin","size","length","empty","table","rowKey","student","id","dataSource","bordered","pagination","pageSize","scroll","y","textAlign","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.6d6fe321.chunk.js","sourcesContent":["import fetch from 'unfetch';\n\nconst checkStatus = response => {\n    if (response.ok) {\n        return response;\n    }\n    // convert non-2xx HTTP responses into errors:\n    const error = new Error(response.statusText);\n    error.response = response;\n    return Promise.reject(error);\n}\n\nexport const getAllStudents = () =>\n    fetch(\"api/v1/students\")\n        .then(checkStatus);\n\n","import {getAllStudents} from \"./client\";\nimport './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport {Table, Breadcrumb, Layout, Menu, Spin, Empty} from 'antd';\nimport {\n    DesktopOutlined,\n    FileOutlined,\n    PieChartOutlined,\n    TeamOutlined,\n    UserOutlined,\n} from '@ant-design/icons';\n\nconst {Header, Content, Footer, Sider} = Layout;\nconst items = [\n    getItem('Option 1', '1', <PieChartOutlined/>),\n    getItem('Option 2', '2', <DesktopOutlined/>),\n    getItem('User', 'sub1', <UserOutlined/>, [\n        getItem('Tom', '3'),\n        getItem('Bill', '4'),\n        getItem('Alex', '5'),\n    ]),\n    getItem('Team', 'sub2', <TeamOutlined/>, [getItem('Team 1', '6'), getItem('Team 2', '8')]),\n    getItem('Files', '9', <FileOutlined/>),\n];\nconst columns = [\n    {\n        title: 'Id',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email',\n    },\n    {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender',\n    },\n];\n\nfunction getItem(label, key, icon, children) {\n    return {\n        key,\n        icon,\n        children,\n        label,\n    };\n}\n\n\nfunction App() {\n    const [collapsed, setCollapsed] = useState(false);\n    const [students, setStudents] = useState([]);\n    const [fetching, setFetching] = useState(true);\n\n    const fetchStudents = () =>\n        getAllStudents()\n            .then(res => res.json())\n            .then(data => {\n                setStudents(data);\n                setFetching(false);\n            });\n\n    useEffect(() => {\n        console.log(\"comp moumt\");\n        fetchStudents();\n    }, [])\n\n\n    const renderStudents = () => {\n        if(fetching){\n           return <Spin size=\"large\"/>\n        }\n        if (students.length <= 0) {\n            return <Empty />;\n        }\n        return <Table\n            rowKey={(student)=>student.id}\n            dataSource={students}\n            columns={columns}\n            bordered title={()=> 'Students'}\n            pagination={{pageSize:50}}\n            scroll={{y:240}}\n        />\n    }\n\n    return <Layout\n        style={{\n            minHeight: '100vh',\n        }}\n    >\n        <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\n            <div className=\"logo\"/>\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\" items={items}/>\n        </Sider>\n        <Layout className=\"site-layout\">\n            <Header\n                className=\"site-layout-background\"\n                style={{\n                    padding: 0,\n                }}\n            />\n            <Content\n                style={{\n                    margin: '0 16px',\n                }}\n            >\n                <Breadcrumb\n                    style={{\n                        margin: '16px 0',\n                    }}\n                >\n                    <Breadcrumb.Item>User</Breadcrumb.Item>\n                    <Breadcrumb.Item>Bill</Breadcrumb.Item>\n                </Breadcrumb>\n                <div\n                    className=\"site-layout-background\"\n                    style={{\n                        padding: 24,\n                        minHeight: 360,\n                    }}\n                >\n                    {renderStudents()}\n                </div>\n            </Content>\n            <Footer\n                style={{\n                    textAlign: 'center',\n                }}\n            >By Makar0ha\n            </Footer>\n        </Layout>\n    </Layout>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}